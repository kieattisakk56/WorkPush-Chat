/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ChatContentUser {
        "data": any;
    }
    interface ChatDirectory {
    }
    interface ChatManagement {
    }
    interface ChatUserCenter {
        "data": any;
    }
    interface ChatUserMessagechatUserMessage {
        "data": any;
    }
    interface ChatUsersPanel {
        "data": any;
    }
    interface ChatView {
        "clientid": any;
    }
}
declare global {
    interface HTMLChatContentUserElement extends Components.ChatContentUser, HTMLStencilElement {
    }
    var HTMLChatContentUserElement: {
        prototype: HTMLChatContentUserElement;
        new (): HTMLChatContentUserElement;
    };
    interface HTMLChatDirectoryElement extends Components.ChatDirectory, HTMLStencilElement {
    }
    var HTMLChatDirectoryElement: {
        prototype: HTMLChatDirectoryElement;
        new (): HTMLChatDirectoryElement;
    };
    interface HTMLChatManagementElement extends Components.ChatManagement, HTMLStencilElement {
    }
    var HTMLChatManagementElement: {
        prototype: HTMLChatManagementElement;
        new (): HTMLChatManagementElement;
    };
    interface HTMLChatUserCenterElement extends Components.ChatUserCenter, HTMLStencilElement {
    }
    var HTMLChatUserCenterElement: {
        prototype: HTMLChatUserCenterElement;
        new (): HTMLChatUserCenterElement;
    };
    interface HTMLChatUserMessagechatUserMessageElement extends Components.ChatUserMessagechatUserMessage, HTMLStencilElement {
    }
    var HTMLChatUserMessagechatUserMessageElement: {
        prototype: HTMLChatUserMessagechatUserMessageElement;
        new (): HTMLChatUserMessagechatUserMessageElement;
    };
    interface HTMLChatUsersPanelElement extends Components.ChatUsersPanel, HTMLStencilElement {
    }
    var HTMLChatUsersPanelElement: {
        prototype: HTMLChatUsersPanelElement;
        new (): HTMLChatUsersPanelElement;
    };
    interface HTMLChatViewElement extends Components.ChatView, HTMLStencilElement {
    }
    var HTMLChatViewElement: {
        prototype: HTMLChatViewElement;
        new (): HTMLChatViewElement;
    };
    interface HTMLElementTagNameMap {
        "chat-content-user": HTMLChatContentUserElement;
        "chat-directory": HTMLChatDirectoryElement;
        "chat-management": HTMLChatManagementElement;
        "chat-user-center": HTMLChatUserCenterElement;
        "chat-user-messagechat-user-message": HTMLChatUserMessagechatUserMessageElement;
        "chat-users-panel": HTMLChatUsersPanelElement;
        "chat-view": HTMLChatViewElement;
    }
}
declare namespace LocalJSX {
    interface ChatContentUser {
        "data"?: any;
        "onCloseMessageBox"?: (event: CustomEvent<any>) => void;
    }
    interface ChatDirectory {
    }
    interface ChatManagement {
        "onOpenDirectory"?: (event: CustomEvent<any>) => void;
        "onOpenUser"?: (event: CustomEvent<any>) => void;
    }
    interface ChatUserCenter {
        "data"?: any;
        "onCloseMessageBox"?: (event: CustomEvent<any>) => void;
        "onSelectUser"?: (event: CustomEvent<any>) => void;
    }
    interface ChatUserMessagechatUserMessage {
        "data"?: any;
    }
    interface ChatUsersPanel {
        "data"?: any;
    }
    interface ChatView {
        "clientid"?: any;
    }
    interface IntrinsicElements {
        "chat-content-user": ChatContentUser;
        "chat-directory": ChatDirectory;
        "chat-management": ChatManagement;
        "chat-user-center": ChatUserCenter;
        "chat-user-messagechat-user-message": ChatUserMessagechatUserMessage;
        "chat-users-panel": ChatUsersPanel;
        "chat-view": ChatView;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "chat-content-user": LocalJSX.ChatContentUser & JSXBase.HTMLAttributes<HTMLChatContentUserElement>;
            "chat-directory": LocalJSX.ChatDirectory & JSXBase.HTMLAttributes<HTMLChatDirectoryElement>;
            "chat-management": LocalJSX.ChatManagement & JSXBase.HTMLAttributes<HTMLChatManagementElement>;
            "chat-user-center": LocalJSX.ChatUserCenter & JSXBase.HTMLAttributes<HTMLChatUserCenterElement>;
            "chat-user-messagechat-user-message": LocalJSX.ChatUserMessagechatUserMessage & JSXBase.HTMLAttributes<HTMLChatUserMessagechatUserMessageElement>;
            "chat-users-panel": LocalJSX.ChatUsersPanel & JSXBase.HTMLAttributes<HTMLChatUsersPanelElement>;
            "chat-view": LocalJSX.ChatView & JSXBase.HTMLAttributes<HTMLChatViewElement>;
        }
    }
}
